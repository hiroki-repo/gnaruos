#include "stdcall.as"
dupptr inkey,sysvalptr@stdcallinterface(17),4,4
dupptr mclick,sysvalptr@stdcallinterface(18),4,4
#module "kerupanium"
#deffunc module_init // モジュール初期化命令
dim fps_time,60
return
#deffunc setfps // ループの先頭に置く。fps取得のためのデータを取得
fps_b=gettime(6)*1000+gettime(7)
fps_time(fps_s)=fps_b-fps_a
if fps_time(fps_s)<0 : fps_time(fps_s)+=60000
if fps_time(fps_s)=0 : fps_time(fps_s)+=1
fps_s=(fps_s+1)\60
fps_a=fps_b
return
#defcfunc getfps // fps取得。ループの先頭にsetfpsが必要
fps_p=0
for cntx,0,60,1
fps_p+=fps_time(cntx)
next
return 4000.0/fps_p
#global
module_init
if windowisnotfirstrun=0{
windowx=pid*8
windowy=pid*8
windowmaxx=128
windowmaxy=40
windowisnotfirstrun=1
inket="":inkeys=""
buttoni1=0
buttoni2=0
buttoni3=""
}
if pnotfirstrun=1{
windowtaskenable=1
color 255,255,255
boxf windowx,windowy+8,windowx+windowmaxx,windowy+windowmaxy
setfps:sdim messages,64:messages=str(getfps())+"FPS":repeat:if cnt=strlen(messages){break}:ret=syscall(5,int(windowx)+(cnt*6),int(windowy)+8,varptr("BGF1"),peek(messages,cnt),1,varptr(1.0)):loop
/*if inkey!inkeyold{if inkey=0x0D or inkey=0x0A {inkey=0:inkeyold=0:inketx="":inketx=inket+".otw":ret=syscall(11,varptr(inketx)):ret=syscall(7,0)}else{poke inkeys,0,inkey:inket+=inkeys}}
sdim messages,64:messages=inket:repeat:if cnt=strlen(messages){break}:ret=syscall(5,int(windowx)+(cnt*6),int(windowy)+8,varptr("BGF1"),peek(messages,cnt),1,varptr(1.0)):loop*/
}
pnotfirstrun=1
return
